<?php

/**
 * @file
 * Exposed theming
 */




/*
 * Implements HOOK_menu().
 */
function petstarter_extra_menu() {

  $items = array();

  // photo share status
  $items['share/ajax'] = array(
    'title' => 'fb status change',
    'page callback' => '_petstarter_extra_share_ajax',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE
  );

  // album code enter
  
$items['code/entry'] = array(
   'title' => t('Enter code here'),
   'description' => t('Enter code'),
   'page callback' => 'drupal_get_form',
   'page arguments' => array('petstarter_code_entry_form'),
   'menu_name' => 'main-menu',
   'type' => MENU_LOCAL_ACTION,
   'access callback' => TRUE
 );


 $items['mymodule/page'] = array(
    'page callback' => 'mymodule_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['mymodule/%ctools_js'] = array(
    'page callback' => 'mymodule_callback',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );



  return $items;
}


function mymodule_page() {
  // Load the modal library and add the modal javascript.
  ctools_include('modal');
  ctools_modal_add_js();
  return _mymodule_make_link('Magical modal');
}  

function _mymodule_make_link($link_text = '') {
  // Set a default value if no text in supplied.
  if (empty($link_text)) {
    $link_text = 'Magical Modal';
  }

  return '<div id="magical-modal-link">' . l($link_text, 'mymodule/nojs', array('attributes' => array('class' => 'ctools-use-modal'))) . '</div>';
} 


function mymodule_callback($ajax) {
  if ($ajax) {
    ctools_include('ajax');
    ctools_include('modal');

    $form_state = array(
      'ajax' => TRUE,
      'title' => t('MyModule Modal Form'),
    );

    // Use ctools to generate ajax instructions for the browser to create
    // a form in a modal popup.
    $output = ctools_modal_form_wrapper('mymodule_form', $form_state);

    // If the form has been submitted, there may be additional instructions
    // such as dismissing the modal popup.
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }

    // Return the ajax instructions to the browser via ajax_render().
    //print ajax_render($output);

    $node = node_load('136');
    $contents = render(node_view($node, 'teaser', NULL));
    return ctools_modal_render($node->title, 'test contents here') ;


    drupal_exit();
  }
  else {
    //return drupal_get_form('mymodule_form');
  }
}        


function mymodule_form($form, $form_state) {
  $form = array();

  $form['new_link_text'] = array(
    '#type' => 'textfield',
    '#title' => t('Link text'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}   


function petstarter_extra_form_submit(&$form, &$form_state) {
  // Generate the new link using the submitted text value.
  $link = _mymodule_make_link($form_state['values']['new_link_text']);

  // Tell the browser to close the modal.
  $form_state['ajax_commands'][] = ctools_modal_command_dismiss();

  // Tell the browser to replace the old link with the new one.
  $form_state['ajax_commands'][] = ajax_command_replace('#magical-modal-link', $link);
}










/*
 * Implements HOOK_form_node_form_alter().
 */
function petstarter_extra_form_node_form_alter(&$form, &$form_state, $form_id) {
  
  //var_dump($form_id);

	if ($form_id == 'photo_album_node_form') {
		
		$form['field_photo_album_image_1']['und'][0]['#description'] = "<div class='sssss'>ss</div>";

		
		//print "<pre>"; print_r($form['field_photo_album_image_1']['und'][0]); print "</pre>";
	}
}


function _petstarter_extra_share_ajax($string = '') {

	//echo 'hihi';
  $nid = $_POST['arg1'];
  $arg = $_POST['arg2'];

  $node = node_load(array('nid' => $nid));
  //var_dump($n->field_share_type);

  //$node->field_share_type['und'][0]['value']=$node->field_share_type['und'][0]['value']+1;
  //$node->field_share_type['und'][0]['value']=0;

  if($arg==0){
    $node->field_share_type_0['und'][0]['value']=1;
  }elseif($arg==1){
    $node->field_share_type_1['und'][0]['value']=1;
  }elseif($arg==2){
    $node->field_share_type_2['und'][0]['value']=1;
  }elseif($arg==3){
    $node->field_share_type_3['und'][0]['value']=1;
  }



  node_save($node);

}







function petstarter_extra_views_post_execute(&$view) {


  //echo '<pre>';
  //print_r($view->current_display);
    
   if($view->name=='views_position' && $view->current_display=='page'){
      //$newResults[] = $view->result[0];
      //$newResults2 = array();
  //   //$view->result = $newResults;
     //echo '<pre>';
     //print_r($view->result);
       //$view->result = $newResults[0];
       //print_r($newResults);
      //$view->result = array();
      //$view->result = $newResults;
      //print_r($view->result);

    $seen_rows = array();
    $newResults = array();
    $newResults_sponsor = array();
    $finalresult = array();

    for($i = 0; $i < count($view->result); ++$i) {
        if ($view->result[$i]->_field_data['nid']['entity']->field_sponsor['und'][0]['value']=='1') {
            $newResults[] = $view->result[$i];
        }
    }

    for($i = 0; $i < count($view->result); ++$i) {
        if ($view->result[$i]->_field_data['nid']['entity']->field_sponsor['und'][0]['value']!='1') {
            $newResults_sponsor[] = $view->result[$i];
        }
    }

    //echo count($newResults_sponsor);
    $count=0;
    for($j=0;$j < 9; $j++){

        if($j!=0 && $j%2==0){
          if($newResults[$count]){
            $finalresult[]=$newResults[$count];
            $count++;
          }
          $finalresult[]=$newResults_sponsor[$j];
          //print_r($newResults[$count]);
        }
        else{
          $finalresult[]=$newResults_sponsor[$j];
        }

    }

    //echo '<pre>';
    //print_r($finalresult);


      $view->result = $finalresult;


   }

}



function petstarter_extra_views_pre_render(&$view) {


  //if ($view->name == 'article_test' && $view->current_display=='panel_pane_2') {


 
   if ($view->name == 'article_test' && $view->current_display=='page'){

           //print_r($view->current_display);

        foreach($view->result as $row){
              //echo '<pre>';
              //print_r($row->field_field_sponsor);
              //echo $row->field_field_sponsor[0]['raw']['value'];
              if($row->field_field_sponsor[0]['raw']['value']==1){
                $row->field_field_sponsor[0]['rendered']['#markup']=2;
              }
        }
      
      //$influence_summery = $row->field_field_slideshow_image[0]['rendered']['field_image_summery'][0]['#markup'];
      //$influence_summery.= '<div class="readMoreBtn">Read more...</div>';
      //$row->field_field_slideshow_image[0]['rendered']['field_image_summery'][0]['#markup'] =



   }






 //var_dump($view->name);
 //var_dump(count($view->result));
//echo '<pre>';print_r($view->result);echo '</pre>';

    //if($view->name=='views_position'){
      
      //echo '<pre>';
      //print_r($view->result);
      //print_r($view->result['_field_data']);
      // foreach($view->result as $r => &$result) {
      //     //echo '<pre>';
      //     //print_r($result->_field_data['nid']['entity']->field_sponsor['und'][0]['value']);
      //     $result->_field_data['nid']['entity']->field_sponsor['und'][0]['value'] = 2;
      // }


      // for ($i = 0; $i < count($view->result); ++$i) {
      //           $view->result[$i]->_field_data['nid']['entity']->field_sponsor['und'][0]['value'] = 2;
      //         }
      //     // not sure if I need this
      //     return $view;

      //return $view = arraay();

      //$view->result = array('0'->'node_title'->'test');
        //shuffle($view->result);

        // for ($i = 0; $i < count($view->result); ++$i) {
        //       echo   $view->result[$i]->_field_data['nid']['entity']->field_sponsor['und'][0]['value'];
        // }
      //$view->result = array();
      // for ($i = 0; $i < 1; $i++) {
      //            //echo '<pre>';
      //            //print_r($view->result[$i]->nid);
      //   $view->result[0] = $view->result[$i];
      // }

      //print_r($view->result[0]);

      //$view->result = $view->result[0];
      
      //return $view->result[0];

      
    //}


    if($view->name=='social_listing' && count($view->result)>0) {
          drupal_goto('node/' . $view->result[0]->nid);
    }

    if($view->name=='social_listing' && count($view->result)==0) {
          //drupal_goto('node/add/social-share');
          global $user; 
          $node = new stdClass();
          $node->type = "social_share"; 
          //$node->title = "Your title goes jere";
          //$node->language = LANGUAGE_NONE; 
          node_object_prepare($node); 
          $node->uid = $user->uid;
          $node = node_submit($node); 
          node_save($node);
          drupal_goto('social-listing');

    }
	
	if($view->name=='album_check' && count($view->result)>0) {
          drupal_goto('fotoalbum');
          //drupal_goto('code-confirmation');
    }
	
	if($view->name=='album_check' && count($view->result)==0) {
          //drupal_goto('social-listing');
          drupal_goto('fotoalbum');
    }


  /* if($view->name=='code_confirmation' && count($view->result)==0) {
          drupal_goto('code/entry');
    }

  if($view->name=='code_confirmation' && count($view->result)>0) {
          drupal_goto('fotoalbum');
    } */


  if($view->name=='fotoalbum') {

      if(count($view->result)>0){
        drupal_goto('node/'. $view->result[0]->nid.'/edit');
      }else{
        drupal_goto('code/entry');
      }
          
  }
	
	


}



function petstarter_extra_form_alter(&$form, &$form_state, $form_id) {


//var_dump($form_id);

 if($form_id=='metatags_quick_admin_path_based_edit'){ 
  //echo '<pre>';
  //$entity = $form['#entity'];
  //print_r($entity->meta_description);
  //print_r($form['#entity']->meta_description['und'][0]['metatags_quick']);

  //$form['#entity']->meta_description['und'][0]['metatags_quick']['#title'] = 'FUCK';

//   $form['meta_description'] = array(
//   '#title' => t('(Meta)Description'),
//   '#type' => 'textarea',
//   '#resizable' => TRUE,
//   '#size' => 250,
//   '#maxlength' => 250,
// );


} 

  
  if($form_id=='photo_album_node_form'){
      
      //$form['#submit'][] = 'album_form_submit';
  }


   if ($form_id == 'social_share_node_form') {
    $form['actions']['submit']['#value'] = 'Start Sharing';
    }

    if ($form_id == 'user_login_block' || $form_id == 'user_login') {
      
        //$form['#submit'][] = 'loginform_extra_submit_innovation';
        $form['#validate'] = array('loginform_extra_submit_innovation');
        //$form['#submit'] = array('loginform_extra_submit_innovation');
        
    } 


}


/* function album_form_submit($form, &$form_state) {

  if($form_state['values']['field_album_confirmation']['und'][0]['value']==1){
    drupal_goto('album_confirm');
  }

} */



function loginform_extra_submit_innovation($form, &$form_state) {

//var_dump($form_state);
  echo $form_state['values']['name'];
  echo $form_state['values']['pass'];
  //exit;

   
  global $language;
  global $user;

  if($_SESSION['set_for_menu']==18 && $language->prefix=='nl'){
    $redirect_link='katten/home';
  }elseif ($_SESSION['set_for_menu']==18 && $language->prefix=='fr') {
    $redirect_link='chats/home';
  }elseif ($_SESSION['set_for_menu']==19 && $language->prefix=='nl') {
    $redirect_link='honden/home';
  }elseif ($_SESSION['set_for_menu']==19 && $language->prefix=='fr') {
    $redirect_link='chiens/home';
  }  

  echo $uid = user_authenticate($form_state['values']['name'],$form_state['values']['pass']);
  //$arr = array ('name'=>$form_state['values']['name'],'pass'=>$form_state['values']['pass']);
  //user_login_finalize($arr);
  if($uid!=''){
    $user = user_load($uid);
    drupal_session_regenerate();
    //drupal_goto('user');
    drupal_goto($redirect_link);
  }

  else{


    $email = $form_state['values']['name'];
    $password = $form_state['values']['pass'];
	
	/*$user = user_load_by_name($email);
	$user_id = $user->uid;
	if($user_id!=''){
			$user = user_load($user_id);
			$edit['pass'] = $password;
			user_save($user, $edit);
			drupal_goto('user');
	} */
	
	
	
      $opts = array(
        'http'=>array(
          'method'=>"GET",
          'header'=>"Accept: application/json\r\n" .
                    "Authorization: Basic " . base64_encode("$email:$password") . "\r\n"
        )
      );
      $context = stream_context_create($opts);
      $file = file_get_contents('http://www.mypet.be/profile/show', false, $context);
      $result = json_decode($file);

        //echo "<pre>";print_r($result);echo "</pre>";
		//if($result->owner){echo 'y';}
		//else{echo 'n';}
		//exit;

      if($result->owner){
	  
	  
			//update user
			
			$user = user_load_by_name($email);
			
			if($user){
					$user_id = $user->uid;
					$user = user_load($user_id);
					$edit['pass'] = $password;
					user_save($user, $edit);
					//drupal_goto('user');
          drupal_goto($redirect_link);
			}
			//end update user
	  
	  
			//add fresh user
                $fields = array(
                        'name' => $result->owner->username,
                        'mail' => $result->owner->email,
                        'pass' => $password,
                        'status' => 1,
                        'init' => 'email address',
                        'roles' => array(
                          DRUPAL_AUTHENTICATED_RID => 'authenticated user',
                        ),
                      );
                 
                  $account = user_save('', $fields);

            $uid = user_authenticate($result->owner->email,$password);
            $user = user_load($uid);
            drupal_session_regenerate();
            //drupal_goto('user');
            drupal_goto($redirect_link);
      }

      drupal_goto('user');

  }
   
  


}













function petstarter_code_entry_form($form, &$form_state) {
        
        //var_dump(arg());
          //var_dump($messages);

        //drupal_get_messages('test');

    //$form['#entity']->meta_description['und'][0]['metatags_quick']['#title'] = 'FUCK';

        $form['secret_code'] = array(
            '#type' => 'textfield', //you can find a list of available types in the form api
            '#title' => 'Enter code here',
            '#size' => 50,
            '#maxlength' => 50,
            '#required' => TRUE, //make this field required
          );

          

          $form['save'] = array(
          '#type' => 'submit',
          '#value' => t('Enter'),
          '#name' => 'submit',
          '#prefix'=>'<div id="btn">',
          '#suffix'=>'</div>',
          '#submit' => array('manage_code_entry_form_submit')
          );

        $text='<div class="code_frm">'.t('You have earned 1500 points or more? Go quickly to').' <a href="http://www.royalty.royalcanin.be" target="_blank">royalty.royalcanin.be</a>'. t(' and ask your unique code. Fill in your unique code below:
              ').'</div>';
        $form['some_text'] = array('#markup' => $text);
    


          return $form;
}


function manage_code_entry_form_submit($form, &$form_state) {


$user_code = $form_state['values']['secret_code'];

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'album_code')
        ->propertyCondition('status', 1)
        ->fieldCondition('field_album_code', 'value', $user_code, '=')
        ->range(0, 10); // Run the query as user 1.
  $result = $query->execute();



  $nid = current($result['node'])->nid;
  
  if($nid!=''){
        $node = node_load(array('nid' => $nid));
        global $user; //declare the global user object

        if($node->field_code_status['und'][0]['value']==0){
          $node->field_code_status['und'][0]['value']=1;
          $node->field_mypet_user_id['und'][0]['value']=$user->uid;
          node_save($node);
          //drupal_goto('fotoalbum');
          drupal_goto('node/add/photo-album');
        }else{
            drupal_set_message(t('Invalid code'),"warning");
            drupal_goto('code/entry');
            //form_set_error('secret_code',t("Try again")); 
        }
  }else{
      drupal_set_message(t('Invalid code'),"warning");
      drupal_goto('code/entry');
      //form_set_error('secret_code',t("Try again")); 
  }

  
}




function petstarter_extra_page_alter(&$page) {
  if (current_path() == 'code/entry') {
      unset($page['right']);
      unset($page['right_dog']);
  }
}

function petstarter_node_view_alter(&$build) {
  //if ($build['#node']->type == 'book') {
    $build['links']['comment']['#links']['comment-add'] = "rel=\"nofollow\"";
  //}

 echo "<pre>";
 print_r($build);


}


function petstarter_extra_menu_alter(&$items) {
  //$items['forum']['access callback'] = '_accesscheck';

  //echo '<pre>';
  //print_r($items);
}


function petstarter_extra_menu_link_alter(&$item)
{
  // echo '<pre>';
  // print_r($item);
  // exit();

  if($item['link_path']=="admin/tutorial14333")
  {
    $item['options']['attributes']['target'] = '_blank';
  }
}


